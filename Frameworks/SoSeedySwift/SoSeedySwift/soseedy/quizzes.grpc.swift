//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: quizzes.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import Dispatch
import SwiftGRPC
import SwiftProtobuf

public protocol Soseedy_SeedyQuizzesCreateQuizCall: ClientCallUnary {}

fileprivate final class Soseedy_SeedyQuizzesCreateQuizCallBase: ClientCallUnaryBase<Soseedy_CreateQuizRequest, Soseedy_Quiz>, Soseedy_SeedyQuizzesCreateQuizCall {
  override class var method: String { return "/soseedy.SeedyQuizzes/CreateQuiz" }
}

public protocol Soseedy_SeedyQuizzesCreateQuizSubmissionCall: ClientCallUnary {}

fileprivate final class Soseedy_SeedyQuizzesCreateQuizSubmissionCallBase: ClientCallUnaryBase<Soseedy_CreateQuizSubmissionRequest, Soseedy_QuizSubmission>, Soseedy_SeedyQuizzesCreateQuizSubmissionCall {
  override class var method: String { return "/soseedy.SeedyQuizzes/CreateQuizSubmission" }
}

public protocol Soseedy_SeedyQuizzesCompleteQuizSubmissionCall: ClientCallUnary {}

fileprivate final class Soseedy_SeedyQuizzesCompleteQuizSubmissionCallBase: ClientCallUnaryBase<Soseedy_CompleteQuizSubmissionRequest, Soseedy_QuizSubmission>, Soseedy_SeedyQuizzesCompleteQuizSubmissionCall {
  override class var method: String { return "/soseedy.SeedyQuizzes/CompleteQuizSubmission" }
}

public protocol Soseedy_SeedyQuizzesCreateQuizQuestionCall: ClientCallUnary {}

fileprivate final class Soseedy_SeedyQuizzesCreateQuizQuestionCallBase: ClientCallUnaryBase<Soseedy_CreateQuizQuestionRequest, Soseedy_CreateQuizQuestionResponse>, Soseedy_SeedyQuizzesCreateQuizQuestionCall {
  override class var method: String { return "/soseedy.SeedyQuizzes/CreateQuizQuestion" }
}

public protocol Soseedy_SeedyQuizzesPublishQuizCall: ClientCallUnary {}

fileprivate final class Soseedy_SeedyQuizzesPublishQuizCallBase: ClientCallUnaryBase<Soseedy_PublishQuizRequest, Soseedy_Quiz>, Soseedy_SeedyQuizzesPublishQuizCall {
  override class var method: String { return "/soseedy.SeedyQuizzes/PublishQuiz" }
}

public protocol Soseedy_SeedyQuizzesSeedQuizzesCall: ClientCallUnary {}

fileprivate final class Soseedy_SeedyQuizzesSeedQuizzesCallBase: ClientCallUnaryBase<Soseedy_SeedQuizzesRequest, Soseedy_Quizzes>, Soseedy_SeedyQuizzesSeedQuizzesCall {
  override class var method: String { return "/soseedy.SeedyQuizzes/SeedQuizzes" }
}

public protocol Soseedy_SeedyQuizzesSeedQuizSubmissionCall: ClientCallUnary {}

fileprivate final class Soseedy_SeedyQuizzesSeedQuizSubmissionCallBase: ClientCallUnaryBase<Soseedy_SeedQuizSubmissionRequest, Soseedy_QuizSubmission>, Soseedy_SeedyQuizzesSeedQuizSubmissionCall {
  override class var method: String { return "/soseedy.SeedyQuizzes/SeedQuizSubmission" }
}


/// Instantiate Soseedy_SeedyQuizzesServiceClient, then call methods of this protocol to make API calls.
public protocol Soseedy_SeedyQuizzesService: ServiceClient {
  /// Synchronous. Unary.
  func createQuiz(_ request: Soseedy_CreateQuizRequest) throws -> Soseedy_Quiz
  /// Asynchronous. Unary.
  func createQuiz(_ request: Soseedy_CreateQuizRequest, completion: @escaping (Soseedy_Quiz?, CallResult) -> Void) throws -> Soseedy_SeedyQuizzesCreateQuizCall

  /// Synchronous. Unary.
  func createQuizSubmission(_ request: Soseedy_CreateQuizSubmissionRequest) throws -> Soseedy_QuizSubmission
  /// Asynchronous. Unary.
  func createQuizSubmission(_ request: Soseedy_CreateQuizSubmissionRequest, completion: @escaping (Soseedy_QuizSubmission?, CallResult) -> Void) throws -> Soseedy_SeedyQuizzesCreateQuizSubmissionCall

  /// Synchronous. Unary.
  func completeQuizSubmission(_ request: Soseedy_CompleteQuizSubmissionRequest) throws -> Soseedy_QuizSubmission
  /// Asynchronous. Unary.
  func completeQuizSubmission(_ request: Soseedy_CompleteQuizSubmissionRequest, completion: @escaping (Soseedy_QuizSubmission?, CallResult) -> Void) throws -> Soseedy_SeedyQuizzesCompleteQuizSubmissionCall

  /// Synchronous. Unary.
  func createQuizQuestion(_ request: Soseedy_CreateQuizQuestionRequest) throws -> Soseedy_CreateQuizQuestionResponse
  /// Asynchronous. Unary.
  func createQuizQuestion(_ request: Soseedy_CreateQuizQuestionRequest, completion: @escaping (Soseedy_CreateQuizQuestionResponse?, CallResult) -> Void) throws -> Soseedy_SeedyQuizzesCreateQuizQuestionCall

  /// Synchronous. Unary.
  func publishQuiz(_ request: Soseedy_PublishQuizRequest) throws -> Soseedy_Quiz
  /// Asynchronous. Unary.
  func publishQuiz(_ request: Soseedy_PublishQuizRequest, completion: @escaping (Soseedy_Quiz?, CallResult) -> Void) throws -> Soseedy_SeedyQuizzesPublishQuizCall

  /// Synchronous. Unary.
  func seedQuizzes(_ request: Soseedy_SeedQuizzesRequest) throws -> Soseedy_Quizzes
  /// Asynchronous. Unary.
  func seedQuizzes(_ request: Soseedy_SeedQuizzesRequest, completion: @escaping (Soseedy_Quizzes?, CallResult) -> Void) throws -> Soseedy_SeedyQuizzesSeedQuizzesCall

  /// Synchronous. Unary.
  func seedQuizSubmission(_ request: Soseedy_SeedQuizSubmissionRequest) throws -> Soseedy_QuizSubmission
  /// Asynchronous. Unary.
  func seedQuizSubmission(_ request: Soseedy_SeedQuizSubmissionRequest, completion: @escaping (Soseedy_QuizSubmission?, CallResult) -> Void) throws -> Soseedy_SeedyQuizzesSeedQuizSubmissionCall

}

public final class Soseedy_SeedyQuizzesServiceClient: ServiceClientBase, Soseedy_SeedyQuizzesService {
  /// Synchronous. Unary.
  public func createQuiz(_ request: Soseedy_CreateQuizRequest) throws -> Soseedy_Quiz {
    return try Soseedy_SeedyQuizzesCreateQuizCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func createQuiz(_ request: Soseedy_CreateQuizRequest, completion: @escaping (Soseedy_Quiz?, CallResult) -> Void) throws -> Soseedy_SeedyQuizzesCreateQuizCall {
    return try Soseedy_SeedyQuizzesCreateQuizCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func createQuizSubmission(_ request: Soseedy_CreateQuizSubmissionRequest) throws -> Soseedy_QuizSubmission {
    return try Soseedy_SeedyQuizzesCreateQuizSubmissionCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func createQuizSubmission(_ request: Soseedy_CreateQuizSubmissionRequest, completion: @escaping (Soseedy_QuizSubmission?, CallResult) -> Void) throws -> Soseedy_SeedyQuizzesCreateQuizSubmissionCall {
    return try Soseedy_SeedyQuizzesCreateQuizSubmissionCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func completeQuizSubmission(_ request: Soseedy_CompleteQuizSubmissionRequest) throws -> Soseedy_QuizSubmission {
    return try Soseedy_SeedyQuizzesCompleteQuizSubmissionCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func completeQuizSubmission(_ request: Soseedy_CompleteQuizSubmissionRequest, completion: @escaping (Soseedy_QuizSubmission?, CallResult) -> Void) throws -> Soseedy_SeedyQuizzesCompleteQuizSubmissionCall {
    return try Soseedy_SeedyQuizzesCompleteQuizSubmissionCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func createQuizQuestion(_ request: Soseedy_CreateQuizQuestionRequest) throws -> Soseedy_CreateQuizQuestionResponse {
    return try Soseedy_SeedyQuizzesCreateQuizQuestionCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func createQuizQuestion(_ request: Soseedy_CreateQuizQuestionRequest, completion: @escaping (Soseedy_CreateQuizQuestionResponse?, CallResult) -> Void) throws -> Soseedy_SeedyQuizzesCreateQuizQuestionCall {
    return try Soseedy_SeedyQuizzesCreateQuizQuestionCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func publishQuiz(_ request: Soseedy_PublishQuizRequest) throws -> Soseedy_Quiz {
    return try Soseedy_SeedyQuizzesPublishQuizCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func publishQuiz(_ request: Soseedy_PublishQuizRequest, completion: @escaping (Soseedy_Quiz?, CallResult) -> Void) throws -> Soseedy_SeedyQuizzesPublishQuizCall {
    return try Soseedy_SeedyQuizzesPublishQuizCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func seedQuizzes(_ request: Soseedy_SeedQuizzesRequest) throws -> Soseedy_Quizzes {
    return try Soseedy_SeedyQuizzesSeedQuizzesCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func seedQuizzes(_ request: Soseedy_SeedQuizzesRequest, completion: @escaping (Soseedy_Quizzes?, CallResult) -> Void) throws -> Soseedy_SeedyQuizzesSeedQuizzesCall {
    return try Soseedy_SeedyQuizzesSeedQuizzesCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func seedQuizSubmission(_ request: Soseedy_SeedQuizSubmissionRequest) throws -> Soseedy_QuizSubmission {
    return try Soseedy_SeedyQuizzesSeedQuizSubmissionCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func seedQuizSubmission(_ request: Soseedy_SeedQuizSubmissionRequest, completion: @escaping (Soseedy_QuizSubmission?, CallResult) -> Void) throws -> Soseedy_SeedyQuizzesSeedQuizSubmissionCall {
    return try Soseedy_SeedyQuizzesSeedQuizSubmissionCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

}

/// To build a server, implement a class that conforms to this protocol.
public protocol Soseedy_SeedyQuizzesProvider {
  func createQuiz(request: Soseedy_CreateQuizRequest, session: Soseedy_SeedyQuizzesCreateQuizSession) throws -> Soseedy_Quiz
  func createQuizSubmission(request: Soseedy_CreateQuizSubmissionRequest, session: Soseedy_SeedyQuizzesCreateQuizSubmissionSession) throws -> Soseedy_QuizSubmission
  func completeQuizSubmission(request: Soseedy_CompleteQuizSubmissionRequest, session: Soseedy_SeedyQuizzesCompleteQuizSubmissionSession) throws -> Soseedy_QuizSubmission
  func createQuizQuestion(request: Soseedy_CreateQuizQuestionRequest, session: Soseedy_SeedyQuizzesCreateQuizQuestionSession) throws -> Soseedy_CreateQuizQuestionResponse
  func publishQuiz(request: Soseedy_PublishQuizRequest, session: Soseedy_SeedyQuizzesPublishQuizSession) throws -> Soseedy_Quiz
  func seedQuizzes(request: Soseedy_SeedQuizzesRequest, session: Soseedy_SeedyQuizzesSeedQuizzesSession) throws -> Soseedy_Quizzes
  func seedQuizSubmission(request: Soseedy_SeedQuizSubmissionRequest, session: Soseedy_SeedyQuizzesSeedQuizSubmissionSession) throws -> Soseedy_QuizSubmission
}

public protocol Soseedy_SeedyQuizzesCreateQuizSession: ServerSessionUnary {}

fileprivate final class Soseedy_SeedyQuizzesCreateQuizSessionBase: ServerSessionUnaryBase<Soseedy_CreateQuizRequest, Soseedy_Quiz>, Soseedy_SeedyQuizzesCreateQuizSession {}

public protocol Soseedy_SeedyQuizzesCreateQuizSubmissionSession: ServerSessionUnary {}

fileprivate final class Soseedy_SeedyQuizzesCreateQuizSubmissionSessionBase: ServerSessionUnaryBase<Soseedy_CreateQuizSubmissionRequest, Soseedy_QuizSubmission>, Soseedy_SeedyQuizzesCreateQuizSubmissionSession {}

public protocol Soseedy_SeedyQuizzesCompleteQuizSubmissionSession: ServerSessionUnary {}

fileprivate final class Soseedy_SeedyQuizzesCompleteQuizSubmissionSessionBase: ServerSessionUnaryBase<Soseedy_CompleteQuizSubmissionRequest, Soseedy_QuizSubmission>, Soseedy_SeedyQuizzesCompleteQuizSubmissionSession {}

public protocol Soseedy_SeedyQuizzesCreateQuizQuestionSession: ServerSessionUnary {}

fileprivate final class Soseedy_SeedyQuizzesCreateQuizQuestionSessionBase: ServerSessionUnaryBase<Soseedy_CreateQuizQuestionRequest, Soseedy_CreateQuizQuestionResponse>, Soseedy_SeedyQuizzesCreateQuizQuestionSession {}

public protocol Soseedy_SeedyQuizzesPublishQuizSession: ServerSessionUnary {}

fileprivate final class Soseedy_SeedyQuizzesPublishQuizSessionBase: ServerSessionUnaryBase<Soseedy_PublishQuizRequest, Soseedy_Quiz>, Soseedy_SeedyQuizzesPublishQuizSession {}

public protocol Soseedy_SeedyQuizzesSeedQuizzesSession: ServerSessionUnary {}

fileprivate final class Soseedy_SeedyQuizzesSeedQuizzesSessionBase: ServerSessionUnaryBase<Soseedy_SeedQuizzesRequest, Soseedy_Quizzes>, Soseedy_SeedyQuizzesSeedQuizzesSession {}

public protocol Soseedy_SeedyQuizzesSeedQuizSubmissionSession: ServerSessionUnary {}

fileprivate final class Soseedy_SeedyQuizzesSeedQuizSubmissionSessionBase: ServerSessionUnaryBase<Soseedy_SeedQuizSubmissionRequest, Soseedy_QuizSubmission>, Soseedy_SeedyQuizzesSeedQuizSubmissionSession {}


/// Main server for generated service
public final class Soseedy_SeedyQuizzesServer: ServiceServer {
  private let provider: Soseedy_SeedyQuizzesProvider

  public init(address: String, provider: Soseedy_SeedyQuizzesProvider) {
    self.provider = provider
    super.init(address: address)
  }

  public init?(address: String, certificateURL: URL, keyURL: URL, provider: Soseedy_SeedyQuizzesProvider) {
    self.provider = provider
    super.init(address: address, certificateURL: certificateURL, keyURL: keyURL)
  }

  public init?(address: String, certificateString: String, keyString: String, provider: Soseedy_SeedyQuizzesProvider) {
    self.provider = provider
    super.init(address: address, certificateString: certificateString, keyString: keyString)
  }

  /// Start the server.
  public override func handleMethod(_ method: String, handler: Handler, queue: DispatchQueue) throws -> Bool {
    let provider = self.provider
    switch method {
    case "/soseedy.SeedyQuizzes/CreateQuiz":
      try Soseedy_SeedyQuizzesCreateQuizSessionBase(
        handler: handler,
        providerBlock: { try provider.createQuiz(request: $0, session: $1 as! Soseedy_SeedyQuizzesCreateQuizSessionBase) })
          .run(queue: queue)
      return true
    case "/soseedy.SeedyQuizzes/CreateQuizSubmission":
      try Soseedy_SeedyQuizzesCreateQuizSubmissionSessionBase(
        handler: handler,
        providerBlock: { try provider.createQuizSubmission(request: $0, session: $1 as! Soseedy_SeedyQuizzesCreateQuizSubmissionSessionBase) })
          .run(queue: queue)
      return true
    case "/soseedy.SeedyQuizzes/CompleteQuizSubmission":
      try Soseedy_SeedyQuizzesCompleteQuizSubmissionSessionBase(
        handler: handler,
        providerBlock: { try provider.completeQuizSubmission(request: $0, session: $1 as! Soseedy_SeedyQuizzesCompleteQuizSubmissionSessionBase) })
          .run(queue: queue)
      return true
    case "/soseedy.SeedyQuizzes/CreateQuizQuestion":
      try Soseedy_SeedyQuizzesCreateQuizQuestionSessionBase(
        handler: handler,
        providerBlock: { try provider.createQuizQuestion(request: $0, session: $1 as! Soseedy_SeedyQuizzesCreateQuizQuestionSessionBase) })
          .run(queue: queue)
      return true
    case "/soseedy.SeedyQuizzes/PublishQuiz":
      try Soseedy_SeedyQuizzesPublishQuizSessionBase(
        handler: handler,
        providerBlock: { try provider.publishQuiz(request: $0, session: $1 as! Soseedy_SeedyQuizzesPublishQuizSessionBase) })
          .run(queue: queue)
      return true
    case "/soseedy.SeedyQuizzes/SeedQuizzes":
      try Soseedy_SeedyQuizzesSeedQuizzesSessionBase(
        handler: handler,
        providerBlock: { try provider.seedQuizzes(request: $0, session: $1 as! Soseedy_SeedyQuizzesSeedQuizzesSessionBase) })
          .run(queue: queue)
      return true
    case "/soseedy.SeedyQuizzes/SeedQuizSubmission":
      try Soseedy_SeedyQuizzesSeedQuizSubmissionSessionBase(
        handler: handler,
        providerBlock: { try provider.seedQuizSubmission(request: $0, session: $1 as! Soseedy_SeedyQuizzesSeedQuizSubmissionSessionBase) })
          .run(queue: queue)
      return true
    default:
      return false
    }
  }
}

